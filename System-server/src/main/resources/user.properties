sql.users={\
  insert:'INSERT INTO users (login, password, email, status, role, first_name, second_name, registered_date, profile, total_score, image_id) VALUES (?, ?, ?, cast(? AS profile_status), cast(? AS user_role), ?, ?, NOW(), ?, ?, ?);',\
  selectByMail:'SELECT * FROM users u LEFT JOIN image i ON u.image_id = i.id WHERE email=?;',\
  update:'UPDATE users SET login = ?, password = ?, email = ?, status = cast(? AS profile_status), role = cast(? AS user_role), first_name = ?, second_name = ?, registered_date = ?, profile = ?, total_score =?, image_id = ? WHERE id = ?;',\
  updateUserPhoto:'update users set image_id=? where id=?;',\
  rowCount:'SELECT count(id) AS row_count FROM users WHERE role = cast(? AS user_role);',\
  getPageByRole:'SELECT * FROM users u LEFT JOIN image i ON u.image_id = i.id WHERE role = cast(? AS user_role) LIMIT ? OFFSET ?;',\
  getAllUsersPage:'SELECT * FROM users u LEFT JOIN image i ON u.image_id = i.id LIMIT ? OFFSET ?;',\
  allUsersCount:'SELECT count(id) FROM users;',\
  selectByLoginAndPassword:'SELECT * FROM users u LEFT JOIN image i ON u.image_id = i.id WHERE login=? AND password=?;',\
  selectByLogin:'SELECT * FROM users u LEFT JOIN image i ON u.image_id = i.id WHERE login=?;',\
  getTopUsers:'select * from users where total_score is not null order by total_score desc limit ?;',\
  searchUsersByLogin:'SELECT u.id, u.login, u.password, u.email, u.status, u.role, u.first_name, u.second_name, u.registered_date, u.profile, u.total_score, i.id as image_id, i.src \
  FROM users u LEFT JOIN image i ON u.image_id = i.id WHERE LOWER(u.login) LIKE LOWER(?);',\
  countRowsForSearchByLogin:'SELECT count(*) AS row_count FROM users WHERE LOWER(login) LIKE LOWER(?);',\
  getAllUsers:'select * from users left join image on (users.image_id=image.id);',\
  getUser:'select * from users left join image on (users.image_id=image.id) where users.id=?;',\
  updateUserStatus:'UPDATE users SET status = cast(? AS profile_status) WHERE id = ?',\
  updateUserScore:'UPDATE users SET total_score = ? WHERE id = ?',\
  getLanguage:'SELECT language from users where id = ?',\
  updateLanguage:'UPDATE users SET language = cast(? AS lang) WHERE id=?',\
  changePassword:'UPDATE users SET password=? where login=?;'\
  }
sql.friends={\
  addUserFriend:'INSERT INTO friendlist (user_id, friend_id, add_date) VALUES (?, ?, NOW());',\
  deleteUserFriend:'DELETE FROM friendlist WHERE user_id=? AND friend_id=?;',\
  getUserFriends:'SELECT u.id, u.login, u.password, u.email, u.status, u.role, u.first_name, u.second_name, u.registered_date, u.profile, u.total_score, i.id as image_id, i.src \
  FROM friendlist fl INNER JOIN users u LEFT JOIN image i ON u.image_id = i.id ON fl.friend_id = u.id WHERE fl.user_id = ?;',\
  rowCount:'SELECT count(users.id) AS row_count FROM friendlist INNER JOIN users ON friendlist.friend_id = users.id WHERE friendlist.user_id=?;',\
  checkFriendship:'SELECT count(*) AS row_count FROM friendlist WHERE user_id = ? AND friend_id = ?;'\
  }
sql.friendsActivity={\
  getAllFriendsActivity:"SELECT frlist.id, login, src, activity_id, activity_content, date, type \
  FROM (SELECT fl.user_id AS user_id, fl.id, friend_id AS activity_id, friend_login AS activity_content, ffl.add_date AS date, \'friend\' AS type \
  FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN (SELECT friendlist.user_id AS fid, friendlist.friend_id AS friend_id, users.login AS friend_login, friendlist.add_date \
  FROM friendlist INNER JOIN users ON friendlist.friend_id = users.id) AS ffl ON fl.id = fid \
  UNION ALL \
  SELECT fl.user_id   AS user_id, fl.id, quiz_id AS activity_id, quiz_name AS activity_content, fm.mark_date AS date, \'mark\' AS type \
  FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN (SELECT favorite_mark.user_id, quiz.id   AS quiz_id, quiz.name AS quiz_name, favorite_mark.mark_date \
  FROM favorite_mark INNER JOIN quiz on favorite_mark.quiz_id = quiz.id) AS fm ON fl.id = fm.user_id \
  UNION ALL \
  SELECT fl.user_id AS user_id, fl.id, q.id AS activity_id, q.name AS activity_content, q.published_date AS date, \'quiz\' AS type \
  FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN quiz q ON q.author_id = fl.id AND q.published_date NOTNULL \
  UNION ALL \
  SELECT fl.user_id AS user_id, fl.id, achievement_id AS activity_id, achievement_name AS activity_content, a.achievement_date AS date, \'achievement\' AS type \
  FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN (SELECT ual.user_id, achievement.id   AS achievement_id, achievement.name AS achievement_name, ual.achievement_date \
  FROM user_achievements_list ual INNER JOIN achievement ON ual.achievement_id = achievement.id) AS a ON a.user_id = fl.id) AS frlist \
  INNER JOIN users ON frlist.id = users.id INNER JOIN image i ON users.image_id = i.id \
  WHERE user_id = ? ORDER BY date DESC;",\
  allRowCount:"SELECT count(id) AS row_count FROM ( \
  SELECT frlist.id FROM (SELECT fl.user_id AS user_id, fl.id FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN (SELECT friendlist.user_id   AS fid, friendlist.friend_id AS friend_id, friendlist.add_date FROM friendlist) AS ffl ON fl.id = fid \
  UNION ALL \
  SELECT fl.user_id AS user_id, fl.id FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN (SELECT favorite_mark.user_id, favorite_mark.quiz_id AS quiz_id FROM favorite_mark) AS fm ON fl.id = fm.user_id \
  UNION ALL \
  SELECT fl.user_id AS user_id, fl.id FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN quiz q ON q.author_id = fl.id AND q.published_date NOTNULL \
  UNION ALL \
  SELECT fl.user_id AS user_id, fl.id FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN (SELECT ual.user_id, ual.achievement_id AS achievement_id FROM user_achievements_list ual) AS a ON a.user_id = fl.id) AS frlist \
  WHERE user_id = ?) AS fa",\
  addFriendPart:" SELECT fl.user_id AS user_id, fl.id, friend_id AS activity_id, friend_login AS activity_content, ffl.add_date AS date, \'friend\' AS type \
  FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN (SELECT friendlist.user_id AS fid, friendlist.friend_id AS friend_id, users.login AS friend_login, friendlist.add_date \
  FROM friendlist INNER JOIN users ON friendlist.friend_id = users.id) AS ffl ON fl.id = fid ",\
  markQuizPart:" SELECT fl.user_id AS user_id, fl.id, quiz_id AS activity_id, quiz_name AS activity_content, fm.mark_date AS date, \'mark\' AS type \
  FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl \
  INNER JOIN (SELECT favorite_mark.user_id, quiz.id   AS quiz_id, quiz.name AS quiz_name, favorite_mark.mark_date FROM favorite_mark INNER JOIN quiz on favorite_mark.quiz_id = quiz.id) AS fm ON fl.id = fm.user_id ",\
  publishQuizPart:" SELECT fl.user_id AS user_id, fl.id, q.id AS activity_id, q.name AS activity_content, q.published_date AS date, \'quiz\' AS type \
  FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl INNER JOIN quiz q ON q.author_id = fl.id AND q.published_date NOTNULL ",\
  achievementPart:" SELECT fl.user_id AS user_id, fl.id, achievement_id AS activity_id, achievement_name AS activity_content, a.achievement_date AS date, \'achievement\' AS type \
  FROM (SELECT friendlist.user_id, friendlist.friend_id AS id FROM friendlist) AS fl \
  INNER JOIN (SELECT ual.user_id, achievement.id AS achievement_id, achievement.name AS achievement_name, ual.achievement_date \
  FROM user_achievements_list ual INNER JOIN achievement ON ual.achievement_id = achievement.id) AS a ON a.user_id = fl.id ",\
  activitySelectStart:"SELECT frlist.id, login, src, activity_id, activity_content, date, type FROM (",\
  activitySelectEnd:") AS frlist INNER JOIN users ON frlist.id = users.id INNER JOIN image i ON users.image_id = i.id WHERE user_id = ? ORDER BY date DESC;",\
  activityCountStart:"SELECT count(id) AS row_count FROM (",\
  activityCountEnd:") AS frlist WHERE user_id = ?;"\
  }
